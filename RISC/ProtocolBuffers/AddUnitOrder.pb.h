// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AddUnitOrder.proto

#ifndef PROTOBUF_AddUnitOrder_2eproto__INCLUDED
#define PROTOBUF_AddUnitOrder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Territory.pb.h"
#include "Unit.pb.h"
// @@protoc_insertion_point(includes)

namespace Buffers {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AddUnitOrder_2eproto();
void protobuf_AssignDesc_AddUnitOrder_2eproto();
void protobuf_ShutdownFile_AddUnitOrder_2eproto();

class AddUnitOrder;

// ===================================================================

class AddUnitOrder : public ::google::protobuf::Message {
 public:
  AddUnitOrder();
  virtual ~AddUnitOrder();

  AddUnitOrder(const AddUnitOrder& from);

  inline AddUnitOrder& operator=(const AddUnitOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddUnitOrder& default_instance();

  void Swap(AddUnitOrder* other);

  // implements Message ----------------------------------------------

  AddUnitOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddUnitOrder& from);
  void MergeFrom(const AddUnitOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Buffers.Territory destination = 1;
  inline bool has_destination() const;
  inline void clear_destination();
  static const int kDestinationFieldNumber = 1;
  inline const ::Buffers::Territory& destination() const;
  inline ::Buffers::Territory* mutable_destination();
  inline ::Buffers::Territory* release_destination();
  inline void set_allocated_destination(::Buffers::Territory* destination);

  // repeated .Buffers.Unit unitList = 2;
  inline int unitlist_size() const;
  inline void clear_unitlist();
  static const int kUnitListFieldNumber = 2;
  inline const ::Buffers::Unit& unitlist(int index) const;
  inline ::Buffers::Unit* mutable_unitlist(int index);
  inline ::Buffers::Unit* add_unitlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Buffers::Unit >&
      unitlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Buffers::Unit >*
      mutable_unitlist();

  // @@protoc_insertion_point(class_scope:Buffers.AddUnitOrder)
 private:
  inline void set_has_destination();
  inline void clear_has_destination();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Buffers::Territory* destination_;
  ::google::protobuf::RepeatedPtrField< ::Buffers::Unit > unitlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_AddUnitOrder_2eproto();
  friend void protobuf_AssignDesc_AddUnitOrder_2eproto();
  friend void protobuf_ShutdownFile_AddUnitOrder_2eproto();

  void InitAsDefaultInstance();
  static AddUnitOrder* default_instance_;
};
// ===================================================================


// ===================================================================

// AddUnitOrder

// required .Buffers.Territory destination = 1;
inline bool AddUnitOrder::has_destination() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddUnitOrder::set_has_destination() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddUnitOrder::clear_has_destination() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddUnitOrder::clear_destination() {
  if (destination_ != NULL) destination_->::Buffers::Territory::Clear();
  clear_has_destination();
}
inline const ::Buffers::Territory& AddUnitOrder::destination() const {
  return destination_ != NULL ? *destination_ : *default_instance_->destination_;
}
inline ::Buffers::Territory* AddUnitOrder::mutable_destination() {
  set_has_destination();
  if (destination_ == NULL) destination_ = new ::Buffers::Territory;
  return destination_;
}
inline ::Buffers::Territory* AddUnitOrder::release_destination() {
  clear_has_destination();
  ::Buffers::Territory* temp = destination_;
  destination_ = NULL;
  return temp;
}
inline void AddUnitOrder::set_allocated_destination(::Buffers::Territory* destination) {
  delete destination_;
  destination_ = destination;
  if (destination) {
    set_has_destination();
  } else {
    clear_has_destination();
  }
}

// repeated .Buffers.Unit unitList = 2;
inline int AddUnitOrder::unitlist_size() const {
  return unitlist_.size();
}
inline void AddUnitOrder::clear_unitlist() {
  unitlist_.Clear();
}
inline const ::Buffers::Unit& AddUnitOrder::unitlist(int index) const {
  return unitlist_.Get(index);
}
inline ::Buffers::Unit* AddUnitOrder::mutable_unitlist(int index) {
  return unitlist_.Mutable(index);
}
inline ::Buffers::Unit* AddUnitOrder::add_unitlist() {
  return unitlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Buffers::Unit >&
AddUnitOrder::unitlist() const {
  return unitlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Buffers::Unit >*
AddUnitOrder::mutable_unitlist() {
  return &unitlist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Buffers

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AddUnitOrder_2eproto__INCLUDED
